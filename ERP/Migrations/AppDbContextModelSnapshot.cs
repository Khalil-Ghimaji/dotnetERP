// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace ERP.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("Persistence.entities.Client.Client", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Persistence.entities.Commande.ArticleCommande", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CommandeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProduitId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantite")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CommandeId");

                    b.HasIndex("ProduitId");

                    b.ToTable("ArticleCommandes");
                });

            modelBuilder.Entity("Persistence.entities.Commande.Commande", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Commandes");
                });

            modelBuilder.Entity("Persistence.entities.Facturation.Facture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Factures");
                });

            modelBuilder.Entity("Persistence.entities.Facturation.Paiement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Paiements");
                });

            modelBuilder.Entity("Persistence.entities.Stock.ArticleStock", b =>
                {
                    b.Property<int>("ProduitId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Prix")
                        .HasColumnType("REAL");

                    b.Property<int>("Quantite")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProduitId");

                    b.ToTable("AricleStocks");
                });

            modelBuilder.Entity("Persistence.entities.Stock.Categorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Persistence.entities.Stock.Produit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArticleStockId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategorieId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategorieId");

                    b.ToTable("Produits");
                });

            modelBuilder.Entity("Persistence.entities.Commande.ArticleCommande", b =>
                {
                    b.HasOne("Persistence.entities.Commande.Commande", null)
                        .WithMany("articles")
                        .HasForeignKey("CommandeId");

                    b.HasOne("Persistence.entities.Stock.Produit", "Produit")
                        .WithMany()
                        .HasForeignKey("ProduitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produit");
                });

            modelBuilder.Entity("Persistence.entities.Stock.ArticleStock", b =>
                {
                    b.HasOne("Persistence.entities.Stock.Produit", "Produit")
                        .WithOne("ArticleStock")
                        .HasForeignKey("Persistence.entities.Stock.ArticleStock", "ProduitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produit");
                });

            modelBuilder.Entity("Persistence.entities.Stock.Produit", b =>
                {
                    b.HasOne("Persistence.entities.Stock.Categorie", "Categorie")
                        .WithMany("Produits")
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorie");
                });

            modelBuilder.Entity("Persistence.entities.Commande.Commande", b =>
                {
                    b.Navigation("articles");
                });

            modelBuilder.Entity("Persistence.entities.Stock.Categorie", b =>
                {
                    b.Navigation("Produits");
                });

            modelBuilder.Entity("Persistence.entities.Stock.Produit", b =>
                {
                    b.Navigation("ArticleStock")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
